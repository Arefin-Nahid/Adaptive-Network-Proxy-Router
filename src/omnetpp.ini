[General]
network = simple_dns_http.SimpleNet
sim-time-limit = 50s
cpu-time-limit = 100s

# Disable channel statistics that cause cMessage/cPacket cast errors
**.channel.result-recording-modes = -

# Network parameters
**.numClients = 2
**.linkDelay = 0.0005s
**.linkDatarate = 1Gbps

# ========== PROXY ROUTER CONFIGURATION ==========
**.proxyRouter.address = 2
**.proxyRouter.processingDelay = 0.001s

# Adaptive Caching Parameters
**.proxyRouter.enableCaching = true
**.proxyRouter.cacheSize = 1000
**.proxyRouter.defaultTTL = 3600s
**.proxyRouter.cachePolicy = "LRU"

# Adaptive TTL Parameters
**.proxyRouter.enableAdaptiveTTL = true
**.proxyRouter.minTTL = 60s
**.proxyRouter.maxTTL = 7200s
**.proxyRouter.latencyThreshold = 0.1s
**.proxyRouter.congestionThreshold = 0.7

# Security Parameters
**.proxyRouter.enableSecurityFiltering = true
**.proxyRouter.validateResponses = true
**.proxyRouter.suspicionThreshold = 0.8
**.proxyRouter.suspicionDecayRate = 0.1
**.proxyRouter.maxRogueDetections = 10

# Learning Router Parameters
**.proxyRouter.enableLearning = true
**.proxyRouter.initialFlooding = true
**.proxyRouter.routingUpdateInterval = 10s
**.proxyRouter.routeExpiryTime = 300s

**.proxyRouter.logsDir = "results"
**.proxyRouter.verboseMode = false

# ========== HTTP ORIGIN SERVER CONFIGURATION ==========
**.httpOrigin.address = 3
**.httpOrigin.serviceTime = 0.01s
**.httpOrigin.pageSizeBytes = 4096
**.httpOrigin.contentHash = "origin-content-hash-12345"

# ========== DHCP SERVER CONFIGURATION ==========
# Legitimate DHCP Server
**.dhcpServerLegit.address = 10
**.dhcpServerLegit.isRogue = false
**.dhcpServerLegit.poolStart = "192.168.1.100"
**.dhcpServerLegit.poolEnd = "192.168.1.200"
**.dhcpServerLegit.leaseTime = 86400s

# Rogue DHCP Server (Attacker)
**.dhcpServerRogue.address = 11
**.dhcpServerRogue.isRogue = true
**.dhcpServerRogue.poolStart = "10.0.0.100"
**.dhcpServerRogue.poolEnd = "10.0.0.200"
**.dhcpServerRogue.leaseTime = 3600s

# ========== DHCP CLIENT CONFIGURATION ==========
# Each client gets unique address automatically: 100, 101, 102, etc.
# Address is calculated as 100 + clientIndex in dhcpclient.cc
**.clients[*].requestInterval = 30s
**.clients[*].autoRenew = true
**.clients[*].httpRequestInterval = 10s
**.clients[*].sendHttpRequests = true

# ========== VISUALIZATION ==========
**.proxyRouter.display = "i=abstract/router;p=300,300"
**.httpOrigin.display = "i=device/server;p=400,200"
**.dhcpServerLegit.display = "i=abstract/server;p=100,300"
**.dhcpServerRogue.display = "i=abstract/server;p=85,217"

# ========== OUTPUT CONFIGURATION ==========
output-scalar-file = ${resultdir}/${configname}-${runnumber}.sca
output-vector-file = ${resultdir}/${configname}-${runnumber}.vec
eventlog-file = ${resultdir}/${configname}-${runnumber}.elog

# Recording
**.scalar-recording = true
**.vector-recording = true

# Disable channel message statistics to avoid cMessage/cPacket cast errors
**.channel.result-recording-modes = -
**.messageSent:histogram.result-recording-modes = -
**.messageReceived:histogram.result-recording-modes = -

# Detailed statistics
**.result-recording-modes = +vector,+histogram

# ========== EXPERIMENT CONFIGURATIONS ==========

[Config Baseline]
description = "Baseline: All features enabled"
# Uses all default settings from General

[Config NoAdaptiveTTL]
description = "Experiment: Disable Adaptive TTL"
**.proxyRouter.enableAdaptiveTTL = false
**.proxyRouter.defaultTTL = 3600s

[Config NoLearning]
description = "Experiment: Disable Learning Router"
**.proxyRouter.enableLearning = false
**.proxyRouter.initialFlooding = true

[Config NoSecurity]
description = "Experiment: Disable Security Filtering"
**.proxyRouter.enableSecurityFiltering = false
**.proxyRouter.validateResponses = false

[Config HighLoad]
description = "Experiment: High client load"
**.numClients = 10
**.clients[*].httpRequestInterval = 5s

[Config HighLatency]
description = "Experiment: High network latency"
**.linkDelay = 0.005s  # 5ms instead of 0.5ms
**.proxyRouter.latencyThreshold = 0.01s

[Config AggressiveAttack]
description = "Experiment: More aggressive rogue DHCP"
**.dhcpServerRogue.offerDelayMs = 10ms  # Very fast response
**.proxyRouter.suspicionThreshold = 0.6  # Lower threshold

[Config SmallCache]
description = "Experiment: Limited cache size"
**.proxyRouter.cacheSize = 100  # Reduced from 1000
**.proxyRouter.minTTL = 30s
**.proxyRouter.maxTTL = 1800s